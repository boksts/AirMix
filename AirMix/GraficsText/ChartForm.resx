<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        om1M0vcF/z//gw7SCUPikwAAAABJRU5ErkJggg==
</value>
  </data>
</root>